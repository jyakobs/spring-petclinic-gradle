# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    # Permissions needed to add pull request comment
    permissions:
      contents: read
      pull-requests: write

    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v2
        with:
          java-version: ${{matrix.java}}
          distribution: 'adopt'
          cache: maven
      - name: Build with Maven Wrapper
        run: ./mvnw clean verify --batch-mode --no-transfer-progress
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GE_ACCESS_TOKEN }}

      - name: Add BuildScan link to the summary
        # Don't add links to scans on forks; they don't have an access tokens
        if: github.event.pull_request.head.repo.full_name == github.repository && !cancelled()
        # The `CI run` custom value is automatically created by the common-custom-user-data-maven-extension, defined by .mvn/extensions.xml
        run: echo "🐘[Gradle Enterprise BuildScan](https://events.gradle.com/scans?search.names=CI%20run&search.values=$GITHUB_RUN_ID)" >> $GITHUB_STEP_SUMMARY

      - name: Add Comment to Pull Request
        if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository && !cancelled()
        uses: actions/github-script@v6
        with:
          script: | 
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `[Gradle Enterprise BuildScan](https://events.gradle.com/scans?search.names=CI%20run&search.values=${context.runId}) for [build #${context.runId}](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})`
            })
